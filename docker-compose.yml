version: "3.8"

services:
  backend:
    build:
      context: ./backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://doorlock:doorlock@db:5432/doorlock
      - REDIS_URL=redis://redis:6379/0
      - MQTT_BROKER_HOST=mosquitto
      - MQTT_BROKER_PORT=1883
    depends_on:
      - db
      - redis
      - mosquitto
    volumes:
      - ./uploads:/app/uploads
    restart: unless-stopped
    networks:
      - doorlock-network

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
      - REACT_APP_SOCKET_URL=http://localhost:5000
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - doorlock-network

  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=doorlock
      - POSTGRES_PASSWORD=doorlock
      - POSTGRES_DB=doorlock
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - doorlock-network

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - doorlock-network

  mosquitto:
    image: eclipse-mosquitto:2
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    restart: unless-stopped
    networks:
      - doorlock-network

networks:
  doorlock-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  mosquitto_data:
